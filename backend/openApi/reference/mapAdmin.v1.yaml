openapi: 3.0.0
servers:
  - description: mapadmin
    url: 'http://localhost:3000'
info:
  description: |-
    Все запросы кроме getAuthData, возвращают стандартный ответ вида
    {
      "isError":boolean,
      "response": string or object or array
    },
    В случае ошибки isError будет true, в response будет описание ошибки. Соответственно, в случае успеха isError будет false.
    Если пытаемся получить доступ к конечной точке, для другой роли. Получим отывет
    {
      "isError": true,
      "response": "No permission"
    }
    Если пытаемся получить доступ к конечной точке, без авторизации. Получим отывет
    {
      "isError": true,
      "response": "Unauthorized"
    },
    Все запросы проходят через валидатор ajv, который будет выводить ошибки в виде строки в respone если is Error = true, в формате %path%:%message%
  version: 1.0.0
  title: mapadmin API
  contact: {}
  license: {}
tags:
  - name: Авторизация
    description: Интерфейс авторизации
  - name: admin
    description: Интерфейс администратора
  - name: moder
    description: Интерфейс модератора
  - name: user
    description: Интерфейс пользователя
paths:
  /api/login:
    post:
      tags:
        - Авторизация
      summary: Запрос авторизации
      operationId: login
      requestBody:
        description: |
          Отправляем данные для авторизации
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: ../models/req/login.json
      responses:
        '200':
          description: Ответ
          content:
            application/json:
              schema:
                type: object
                properties:
                  isError:
                    type: boolean
                  response:
                    type: string
                required:
                  - isError
                  - response
              examples:
                Успешный вход:
                  value:
                    isError: false
                    response: OK
                Неверный логин или пароль:
                  value:
                    isError: true
                    response: Unauthorized
        '400':
          description: Если какой то параметр не будет отправлен
          content:
            application/json:
              schema:
                type: string
                example: Bad Request
      description: Вход в аккаунт
    parameters: []
  /api/logout:
    post:
      tags:
        - Авторизация
      summary: Выход из аккаунта
      operationId: logout
      description: |
        Выход из аккаунта
      responses:
        '200':
          description: Ответ
          content:
            application/json:
              schema:
                type: object
                properties:
                  isError:
                    type: boolean
                  response:
                    type: string
                required:
                  - isError
                  - response
              examples:
                Успешный выход:
                  value:
                    isError: false
                    response: OK
                Не авторизован:
                  value:
                    isError: true
                    response: Unauthorized
    parameters: []
  /api/getAuthData:
    get:
      tags:
        - Авторизация
      summary: Получение данных авторизации
      operationId: getAuthData
      description: |
        Получение информации о текущем авторизованном пользователе
      responses:
        '200':
          description: Ответ
          content:
            application/json:
              schema:
                type: object
                properties:
                  login:
                    type: string
                    format: email
                  isAuth:
                    type: boolean
                  permission:
                    type: string
                    enum:
                      - user
                      - moder
                      - admin
                required:
                  - login
                  - isAuth
                  - permission
              examples:
                Авторизация выполнена:
                  value:
                    login: user@user.user
                    isAuth: true
                    permission: user
                Не авторизован:
                  value:
                    login: null
                    isAuth: false
                    permission: null
    parameters: []
  /api/admin/addUser:
    post:
      tags:
        - admin
      summary: Добавление пользователей
      operationId: addUser
      description: |
        Добавление пользователей с различными правами
      requestBody:
        description: |
          Отправляем логин, пароль и id прав
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: ../models/req/addUser.json
      responses:
        '200':
          description: Возвращает данные добавленного пользователя
          content:
            application/json:
              schema:
                type: object
                properties:
                  isError:
                    type: boolean
                  response:
                    oneOf:
                      - type: string
                      - $ref: ../models/res/getUsers.json
                required:
                  - isError
                  - response
              examples:
                Пользователь добавлен:
                  description: response возвращает поля добавленного пользователя
                  value:
                    isError: false
                    response:
                      - id: 1
                        email: user@user.com
                        permission: user
                Такой пользователь уже есть:
                  value:
                    isError: true
                    response: 'email: this email is already in use'
                Не авторизован:
                  value:
                    isError: true
                    response: Unauthorized
                Поле пароль слишком короткое:
                  value:
                    isError: true
                    response: 'password: should NOT be shorter than 8 characters'
                Неверный формат email:
                  value:
                    isError: true
                    response: 'email: should match format "email"'
                Данного permission_id нет в базе:
                  value:
                    isError: true
                    response: 'permission_id: this permission_id not found'
                Нет такого region_id:
                  value:
                    isError: true
                    response: 'region_id: this region_id not found'
    parameters: []
  /api/admin/editUser:
    post:
      tags:
        - admin
      summary: Изменение логина и пароля
      operationId: editUser
      description: "Изменение логина(email) и пароля, если пароль пустая строка или пароль не отправлен, аналогично и с логином. \n"
      requestBody:
        description: |
          Отправляем логин и пароль
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: ../models/req/editUser.json
      responses:
        '200':
          description: Возвращает данные отредактированного пользователя
          content:
            application/json:
              schema:
                type: object
                properties:
                  isError:
                    type: boolean
                  response:
                    oneOf:
                      - type: string
                      - $ref: ../models/res/getUsers.json
                required:
                  - isError
                  - response
              examples:
                Пароль изменен:
                  description: response возвращает поля отредактированного пользователя
                  value:
                    isError: false
                    response:
                      - id: 1
                        email: user@user.com
                        permission: user
                Запрос не из под администратора:
                  value:
                    isError: true
                    response: No permission
                Не авторизован:
                  value:
                    isError: true
                    response: Unauthorized
                Поле пароль слишком короткое:
                  value:
                    isError: true
                    response: 'password: should NOT be shorter than 8 characters'
                Неверный формат email:
                  value:
                    isError: true
                    response: 'email: should match format "email"'
                Остальные ошибки:
                  value:
                    isError: true
                    response: fail
    parameters: []
  /api/admin/getUsers:
    get:
      tags:
        - admin
      summary: Получить данные всех пользователей
      operationId: getUsers
      description: |
        Получить данные всех пользователей
      responses:
        '200':
          description: В случае успеха передает список пользователей
          content:
            application/json:
              schema:
                type: object
                properties:
                  isError:
                    type: boolean
                    description: ''
                  response:
                    oneOf:
                      - type: string
                      - $ref: ../models/res/getUsers.json
                required:
                  - isError
                  - response
              examples: {}
    parameters: []
  /api/admin/getPermission:
    get:
      tags:
        - admin
      summary: Получить данные всех прав
      operationId: getPermission
      description: |
        Получить права и соответствующие им id
      responses:
        '200':
          description: Ответ
          content:
            application/json:
              schema:
                type: object
                properties:
                  isError:
                    type: boolean
                  response:
                    $ref: ../models/res/getPermissions.json
                required:
                  - isError
                  - response
              examples:
                Пример:
                  value:
                    isError: false
                    response:
                      - id: 1
                        permission: admin
                      - id: 2
                        permission: moder
                      - id: 3
                        permission: user
    parameters: []
  /api/moder/getPoints:
    get:
      tags:
        - moder
      summary: Получение точек
      operationId: getPoints
      description: |
        Получение точек для модератора, выводятся точки с флагом isModerated=1 из связанной таблицы
      responses:
        '200':
          description: Ответ
          content:
            application/json:
              schema:
                type: object
                properties:
                  isError:
                    type: boolean
                  response:
                    $ref: ../models/getPointsModer.v1.json
              examples:
                Пример:
                  value:
                    isError: false
                    response:
                      - id: 1224
                        title: Зоомир
                        apartment: null
                        hours: 'Пн-Пт: 8.00-20.00; Сб-Вс: 8.00-19.00'
                        phone: 8-962-763-11-02
                        site: 'https://karmy.su'
                        description: ''
                        full_city_name: 'Майкоп, Республика Адыгея, Россия'
                        house: 524А
                        street: Пионерская улица
                        moder_status: moderated
    parameters: []
  /api/admin/loginAs:
    post:
      summary: Зайти под другим пользователем
      tags:
        - admin
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  isError:
                    type: boolean
                  response:
                    type: string
              examples:
                Пример:
                  value:
                    isError: false
                    response: OK
        '':
          content:
            application/json:
              schema:
                type: object
                properties:
                  isError:
                    type: boolean
                  response:
                    type: string
              examples:
                Успех:
                  value:
                    isError: false
                    response: OK
                Нет такого id:
                  value:
                    isError: true
                    response: 'id: this userId not found'
          description: Ответ
      operationId: get-admin-loginAs
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: ../models/req/loginAs.json
            examples: {}
        description: Отправлем id пользователя под которого мы хотим зайти
      description: 'Заходим под другим пользователем, система будет идентифицировать как другого пользователя до того как не будет выполнен запрос returnToAdmin'
    parameters: []
  /api/admin/returnToAdmin:
    post:
      summary: Вернуться под администратора
      tags:
        - admin
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  isError:
                    type: boolean
                  response:
                    type: string
                required:
                  - isError
                  - response
              examples:
                Успех:
                  value:
                    isError: false
                    response: OK
                Неудача:
                  value:
                    isError: true
                    response: fail
      operationId: get-admin-returnToAdmin
      description: 'Работает в связке с loginAs, возвращает права администратора'
    parameters: []
  /api/user/addPoint:
    post:
      summary: Добавление точки в базу данных
      operationId: post-user-addPoint
      responses:
        '200':
          description: 'При успехе вернет данные добавленной точки, при дубликате, данные дубликатов.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  isError:
                    type: boolean
                  response:
                    oneOf:
                      - type: string
                      - $ref: ../models/res/getPointsUser.json
                      - $ref: ../models/res/duplicate.json
                required:
                  - isError
                  - response
              examples:
                Успешно:
                  value:
                    isError: false
                    response:
                      - id: 1223
                        full_city_name: 'Майкоп, Республика Адыгея, Россия'
                        street: улица Карла Маркса
                        house: '23'
                        title: Зоомир
                        lng: 44.6117
                        lat: 40.0888
                        apartment: '77'
                        hours: 'Пн-Пт: 9.00-20.00; Сб-Вс: 8.00-19.00'
                        phone: '656565'
                        site: 'https://karmy.su'
                        isActive: 1
                        description: ''
                        timeStamp: '2020-09-04 17:41:24'
                        moder_status: accept
                Дубликат:
                  value:
                    isError: true
                    response:
                      duplicate:
                        points:
                          - full_city_name: 'Майкоп, Республика Адыгея, Россия'
                            street: Заводская улица
                            house: '55'
                            title: магазин
                            lng: 44.598073
                            lat: 40.123267
                            apartment: null
                            hours: sadasdasdasdasdas
                            phone: '24323423434'
                            site: qwewqewqe
                            user: user@user.user
                          - full_city_name: 'Майкоп, Республика Адыгея, Россия'
                            street: Заводская улица
                            house: '55'
                            title: магазин
                            lng: 44.598073
                            lat: 40.123267
                            apartment: null
                            hours: sadasdasdasdasdas
                            phone: '24323423434'
                            site: qwewqewqe
                            user: user@user.user
                        point:
                          title: магазин
                          hours: sadasdasdasdasdas
                          phone: '24323423434'
                          site: qwewqewqe
                          lat: 40.123267
                          lng: 44.598073
                          full_city_name: 'Майкоп, Республика Адыгея, Россия'
                          city: Майкоп
                          street: Заводская улица
                          house: '55'
                Проблема с получением гео данных(скорее всего в данной точке нет строений):
                  value:
                    isError: true
                    response: failed to get geodata
      tags:
        - user
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: ../models/req/addPoint.json
      description: 'Добавляет точку в базу данных, статус moder_status выставляется в moderated, для дальнейшего одобрения модератором. Пока статус не выставится в accept точки не будет отображаться на карте. При добавлении точки с похожими координаторами (точка не дальше 200 метров от имеющейся), будет возвращена ошибка. Для того чтоб все равно добавить точку нужно выставить поле force в запросе в true. Все точки подходящие под критерий в базе будут помечены как возможные дубликаты и присвоены к одной группе. В дальнейшем если точка будет близкой хотя бы к одной из группы, как дубликаты будут выданы все точки группы.'
    parameters: []
  /api/user/getPoints:
    get:
      summary: Получения точек пользователем
      tags:
        - user
      responses:
        '200':
          description: Успех
          content:
            application/json:
              schema:
                type: object
                properties:
                  isError:
                    type: string
                  response:
                    $ref: ../models/res/getPointsUser.json
                required:
                  - isError
                  - response
              examples:
                Пример:
                  value:
                    isError: false
                    response:
                      - id: 1223
                        full_city_name: 'Майкоп, Республика Адыгея, Россия'
                        street: улица Карла Маркса
                        house: '23'
                        title: Зоомир
                        lng: 44.6117
                        lat: 40.0888
                        apartment: '777'
                        hours: 'Пн-Пт: 9.00-20.00; Сб-Вс: 8.00-19.00'
                        phone: '656565'
                        site: 'https://karmy.su'
                        isActive: 1
                        description: ввыв
                        timeStamp: '2020-09-10 16:05:11'
                        moder_status: refuse
                      - id: 1224
                        full_city_name: 'Майкоп, Республика Адыгея, Россия'
                        street: Пионерская улица
                        house: 524А
                        title: Зоомир
                        lng: 44.6128
                        lat: 40.0612
                        apartment: null
                        hours: 'Пн-Пт: 8.00-20.00; Сб-Вс: 8.00-19.00'
                        phone: 8-962-763-11-02
                        site: 'https://karmy.su'
                        isActive: 0
                        description: ппапаврагнвапнвапнгвагнвнаг
                        timeStamp: '2020-09-08 14:26:26'
                        moder_status: refuse
      operationId: get-user-getPoints
      description: 'Получения списка точек принадлежащих пользователю, в случае отсутствия вернет пустой массив'
    parameters: []
  /api/user/delPoint:
    post:
      summary: Удаление точки
      tags:
        - user
      responses:
        '200':
          description: Успех
          content:
            application/json:
              schema:
                type: object
                properties:
                  isError:
                    type: boolean
                  response:
                    type: string
                required:
                  - isError
                  - response
              examples:
                Успех:
                  value:
                    isError: false
                    response: OK
                Нет такой точки:
                  value:
                    isError: true
                    response: point id not found
      operationId: get-user-delPoint
      description: 'Удаляет точку принадлежащию пользователю, который авторизован в данный момент. Принимает в качестве параметра id точки В случае если данный id, принадлежит точке другого пользователя или не существует будет возвращена ошибка с текстом "point id not found"'
      parameters: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: ../models/req/delPoint.json
        description: Отправляем id точки
    parameters: []
  '/api/moder/editPoint/{id}':
    post:
      summary: Редактирование точки модератором
      tags:
        - moder
      responses:
        '200':
          description: Ответ
          content:
            application/json:
              schema:
                type: object
                properties:
                  isError:
                    type: boolean
                  response:
                    type:
                      - string
                      - integer
                    description: id точки в случае успеха
                required:
                  - isError
                  - response
              examples:
                Успех:
                  value:
                    isError: false
                    response: 33
                Некоректное поле id:
                  value:
                    isError: true
                    response: pointId must not be empty
                отправлен id несуществующей точки:
                  value:
                    isError: true
                    response: fail
      operationId: get-moder-editPoint
      description: Редактирует и сразу помечает точку как принятую.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: ../models/req/editPointModer.json
        description: Запрос
    parameters:
      - schema:
          type: integer
        name: id
        in: path
        required: true
  /api/moder/setPointRefuse:
    post:
      summary: Отклоняет точку
      tags:
        - moder
      responses:
        '200':
          description: Ответ
          content:
            application/json:
              schema:
                type: object
                properties:
                  isError:
                    type: boolean
                  response:
                    type:
                      - string
                      - integer
                    description: id точки в случае успеха
                required:
                  - isError
                  - response
              examples:
                Успех:
                  value:
                    isError: false
                    response: 33
                Некоректное поле id:
                  value:
                    isError: true
                    response: pointId must not be empty
                отправлен id несуществующей точки:
                  value:
                    isError: true
                    response: fail
      operationId: get-moder-setPointRefuse
      description: 'Модератор помечает точку как отклоненную(refuse), он так же может оставить комментарий, объяснив причину отказа. '
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: id точки
                description:
                  type: string
                  description: комментарий к отказу
              required:
                - id
    parameters: []
  /api/moder/setPointAccept:
    post:
      summary: Подтверждает точку
      tags:
        - moder
      responses:
        '200':
          description: Ответ
          content:
            application/json:
              schema:
                type: object
                properties:
                  isError:
                    type: boolean
                  response:
                    type:
                      - string
                      - integer
                    description: id точки в случае успеха
                required:
                  - isError
                  - response
              examples:
                Успех:
                  value:
                    isError: false
                    response: 33
                Некоректное поле id:
                  value:
                    isError: true
                    response: pointId must not be empty
                отправлен id несуществующей точки:
                  value:
                    isError: true
                    response: fail
      operationId: get-moder-setPointAccept
      description: Модератор подтверждает изменения точки. Работает только с точками со статусами accept и moderated.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: id точки
              required:
                - id
        description: ''
    parameters: []
  /api/user/editPoint:
    post:
      summary: Редактирование точки
      operationId: post-user-editPoint
      responses:
        '200':
          description: 'При успехе вернет данные добавленной точки, при дубликате, данные дубликатов.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  isError:
                    type: boolean
                  response:
                    oneOf:
                      - type: string
                      - $ref: ../models/res/getPointsUser.json
                      - $ref: ../models/res/duplicate.json
                required:
                  - isError
                  - response
              examples:
                Успешно:
                  value:
                    isError: false
                    response:
                      - id: 1223
                        full_city_name: 'Майкоп, Республика Адыгея, Россия'
                        street: улица Карла Маркса
                        house: '23'
                        title: Зоомир
                        lng: 44.6117
                        lat: 40.0888
                        apartment: '77'
                        hours: 'Пн-Пт: 9.00-20.00; Сб-Вс: 8.00-19.00'
                        phone: '656565'
                        site: 'https://karmy.su'
                        isActive: 1
                        description: ''
                        timeStamp: '2020-09-04 17:41:24'
                        moder_status: accept
                Дубликат:
                  value:
                    isError: true
                    response:
                      duplicate:
                        points:
                          - full_city_name: 'Майкоп, Республика Адыгея, Россия'
                            street: Заводская улица
                            house: '55'
                            title: магазин
                            lng: 44.598073
                            lat: 40.123267
                            apartment: null
                            hours: sadasdasdasdasdas
                            phone: '24323423434'
                            site: qwewqewqe
                            user: user@user.user
                          - full_city_name: 'Майкоп, Республика Адыгея, Россия'
                            street: Заводская улица
                            house: '55'
                            title: магазин
                            lng: 44.598073
                            lat: 40.123267
                            apartment: null
                            hours: sadasdasdasdasdas
                            phone: '24323423434'
                            site: qwewqewqe
                            user: user@user.user
                        point:
                          title: магазин
                          hours: sadasdasdasdasdas
                          phone: '24323423434'
                          site: qwewqewqe
                          lat: 40.123267
                          lng: 44.598073
                          full_city_name: 'Майкоп, Республика Адыгея, Россия'
                          city: Майкоп
                          street: Заводская улица
                          house: '55'
                Пустые координаты:
                  value:
                    isError: true
                    response: lat and lng must not be empty
                Проблема с получением гео данных(скорее всего в данной точке нет строений):
                  value:
                    isError: true
                    response: failed to get geodata
      tags:
        - user
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                lng:
                  type: number
                lat:
                  type: number
                title:
                  type: string
                apartment:
                  type: string
                hours:
                  type: string
                phone:
                  type: string
                site:
                  type: string
                description:
                  type: string
                force:
                  type: boolean
                  description: 'при true добавит точку в любом случае, даже если есть дубликат'
                isActive:
                  type: boolean
              required:
                - lng
                - lat
            examples: {}
      description: |-
        Редактирует точку в базе данных, Стаус меняется на moderated в случаях: меняются любые поля кроме isActive, description;
        меняется discription при статусе refuse. При добавлении точки с похожими координаторами (точка не дальше 200 метров от имеющейся), будет возвращена ошибка. Для того чтоб все равно добавить точку нужно выставить поле force в запросе в true. Все точки подходящие под критерий в базе будут помечены как возможные дубликаты и присвоены к одной группе. В дальнейшем если точка будет близкой хотя бы к одной из группы, как дубликаты будут выданы все точки группы.
    parameters: []
  /api/admin/editRegion:
    post:
      summary: Редактирование региона
      tags:
        - admin
      responses:
        '200':
          description: Возвращает данные отредактированного региона
          content:
            application/json:
              schema:
                $ref: ../models/res/getRegions.json
              examples:
                Успех:
                  value:
                    isError: false
                    response:
                      - id: 1
                        region: qqq
                Неудача:
                  value:
                    isError: false
                    response: fail
      operationId: get-admin-editRegion
      description: Изменение имени региона
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: ../models/req/editRegion.json
            examples: {}
        description: Принимает id и новое имя региона
    parameters: []
  /api/admin/getRegions:
    get:
      summary: Получение списка всех регионов
      tags:
        - admin
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/res/getRegions.json
              examples:
                Успех:
                  value:
                    isError: false
                    response:
                      - id: 1
                        region: qqq
                      - id: 2
                        region: Краснодарский край1
                Неудача:
                  value:
                    isError: false
                    response: fail
      operationId: get-admin-getRegions
      description: Получение списка всех регионов
    parameters: []
  /api/admin/addRegion:
    post:
      summary: Добавление нового региона
      tags:
        - admin
      responses:
        '200':
          description: Возвращает данные добавленого региона
          content:
            application/json:
              schema:
                $ref: ../models/res/getRegions.json
              examples:
                Успех:
                  value:
                    isError: false
                    response:
                      - id: 1
                        region: qqq
                Неудача:
                  value:
                    isError: false
                    response: fail
      operationId: get-admin-addRegion
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: ../models/req/addRegion.json
        description: Принимает название региона
      description: Добавление нового региона
    parameters: []
